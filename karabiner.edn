{:profiles
 {:goku {:default true}}
         ; :alone   80 ; hold for .. ms to register single tap
         ; :held    50 ; TODO: not sure what it's for
         ; :delay   0 ; time after which the key press is delayed
         ; :sim     30 ; keys need to be pressed within this threshold to be considered simultaneous

 :templates
 {:open-a "open -a \"%s\""
  :open-g "open -g \"%s\""}

 :devices
 {:kb-mac [{:vendor_id 1452 :product_id 833}]
  :kb-magic  [{:vendor_id 1241 :product_id 36}]}

 :simlayers
 {:1-mode {:key :1}}    ; navigation hjkl + tab + enter + page down/up

 :main
 [{:des "swap win and alt"
   :rules
   [[:##left_command :left_option :kb-magic]
    [:##left_option :left_command :kb-magic]]}
    ; [:right_control :right_option :kb-magic]
    ; [:right_option :right_command :kb-magic]

  {:des "swap ctrl and caps"
   :rules
   [[:##left_control :caps_lock]
    [:##caps_lock :left_control]]}

  ; {:des "tab -> tab(alone) and tab -> hyper"
  ;  :rules
  ;   [
  ;    [:##tab :!CTOleft_shift nil {:alone :tab}]]}

  ; {:des "backslash -> backslash(alone) and backslash -> hyper"
  ;  :rules
  ;   [
  ;    [:##backslash :!CTOleft_shift nil {:alone :backslash}]]}

  ; {:des "shift -> ctrl + space(alone) and shift -> shift"
  ;  :rules [[:##left_shift  :left_shift nil {:alone :!Tspacebar}]]}

  {:des "Map Command-Shift-Option-Control-Period to f19 (avoid System Diagnostics)"
   :rules [[:!CTOSperiod :f19]]}

  {:des "Map Command-Shift-Option-Control-Comma to f18 (avoid System Diagnostics)"
   :rules [[:!CTOScomma :f18]]}

  {:des "Map Command-Shift-Option-Control-w to f17 (avoid Wifi Diagnostics)"
   :rules [[:!CTOSw :f17]]}

  {:des "1-mode for hjkl movement and nm enter and ui tab and ,. PageDn/Up"
   :rules
   [:1-mode
    [:##h :left_arrow]
    [:##j :down_arrow]
    [:##k :up_arrow]
    [:##l :right_arrow]
    [:##n :return_or_enter]
    [:##m :return_or_enter]
    [:##u [:open-g "raycast://extensions/raycast/window-management/left-half"]]
    [:##i [:open-g "raycast://extensions/raycast/window-management/right-half"]]
    [:##y [:open-g "raycast://extensions/raycast/window-management/maximize"]]
    [:##o [:open-g "raycast://extensions/raycast/window-management/previous-display"]]
    [:##p [:open-g "raycast://extensions/raycast/window-management/next-display"]]
    [:##v [:open-g "raycast://extensions/raycast/clipboard-history/clipboard-history"]]
    [:comma :page_down]
    [:period :page_up]]}

  {:des "right option as leader key"
   :rules
   [[:right_option ["ralt-layer" 1] :kb-magic]
    [:right_command ["ralt-layer" 1] :kb-mac]
    [:escape [["ralt-layer" 0]] :ralt-layer]
    ;; [:v [[:open-a "Visual Studio Code"] ["ralt-layer" 0]] :ralt-layer]
    [:v [[:open-a "Cursor"] ["ralt-layer" 0]] :ralt-layer]
    [:c [[:open-a "Google Chrome.app"] ["ralt-layer" 0]] :ralt-layer]
    [:a [[:open-a "Cherry Studio"] ["ralt-layer" 0]] :ralt-layer]
    ;; [:s [[:open-a "Safari"] ["ralt-layer" 0]] :ralt-layer]
    [:r [[:open-a "warp"] ["ralt-layer" 0]] :ralt-layer]
    [:q [[:open-a "QtScrcpy"] ["ralt-layer" 0]] :ralt-layer]
    [:d [[:open-a "dingTalk.app"] ["ralt-layer" 0]] :ralt-layer]
    [:k [[:open-a "kitty"] ["ralt-layer" 0]] :ralt-layer]
    [:t [[:open-a "Terminal"] ["ralt-layer" 0]] :ralt-layer]
    [:w [[:open-a "weChat.app"] ["ralt-layer" 0]] :ralt-layer]
    [:n [["num-layer" 1] ["ralt-layer" 0]] :ralt-layer]]}

  {:des "num-layer for number keyboard"
   :rules
   [[:escape [["num-layer" 0]] :num-layer]
    [:m :0 :num-layer]
    [:comma :0 :num-layer]
    [:j :1 :num-layer]
    [:k :2 :num-layer]
    [:l :3 :num-layer]
    [:u :4 :num-layer]
    [:i :5 :num-layer]
    [:o :6 :num-layer]
    [:0 :keypad_asterisk :num-layer]]}]}

;; this is a little bit weird, but it's convenient
    ;; the rule [:!Ca :!T1]
    ;; means from command a to control 1
    ;; :!Ca is keycode :a and prefix a with !C

    ;; here's the definition

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

    ;; examples

    ;; !CTSequal_sign  | mandatory command control shift =
    ;;                 | which is command control +
    ;; !O#Sright_arrow | mandatory option optional any right_arrow

    ;; karabiner definition of mandatory and optional
    ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

    ;; rule [<from> <to>]
    ;; if simplified modifier is used in <to>, optional(#) definition will be
    ;; ignored.
